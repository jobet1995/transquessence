name: Next.js CI-CD Pipeline
on:
  push:
    branches:
      - dev
      - stagingTest
      - staging
      - releaseTest
      - release
      - master

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  build_and_push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/mental-health-companion
          tags: |
            type=ref,event=branch
            type=sha

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max


  test_suite:
    name: Run Test Suite
    runs-on: ubuntu-latest
    needs: build_and_push
    if: |
      github.ref == 'refs/heads/stagingTest' ||
      github.ref == 'refs/heads/releaseTest' ||
      github.ref == 'refs/heads/master'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

  deploy_environment:
    name: Deploy to Environment
    runs-on: ubuntu-latest
    needs: [build_and_push, test_suite]
    if: |
      (needs.test_suite.result == 'success' || needs.test_suite.result == 'skipped')
    steps:
      - name: Deploy to Dev
        if: github.ref == 'refs/heads/dev'
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEV_HOST }}
          username: ${{ secrets.DEV_USERNAME }}
          key: ${{ secrets.DEV_SSH_KEY }}
          script: |
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/mental-health-companion:dev
            docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d
            curl -f http://localhost:3000 || (echo "Healthcheck failed" && exit 1)

      - name: Deploy to Staging Test
        if: github.ref == 'refs/heads/stagingTest'
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.STAGING_TEST_HOST }}
          username: ${{ secrets.STAGING_TEST_USERNAME }}
          key: ${{ secrets.STAGING_TEST_SSH_KEY }}
          script: |
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/mental-health-companion:stagingTest
            docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d
            curl -f http://localhost:3000 || (echo "Healthcheck failed" && exit 1)

      - name: Deploy to Staging
        if: github.ref == 'refs/heads/staging'
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.STAGING_HOST }}
          username: ${{ secrets.STAGING_USERNAME }}
          key: ${{ secrets.STAGING_SSH_KEY }}
          script: |
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/mental-health-companion:staging
            docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d
            curl -f http://localhost:3000 || (echo "Healthcheck failed" && exit 1)

      - name: Deploy to Release Test
        if: github.ref == 'refs/heads/releaseTest'
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.RELEASE_TEST_HOST }}
          username: ${{ secrets.RELEASE_TEST_USERNAME }}
          key: ${{ secrets.RELEASE_TEST_SSH_KEY }}
          script: |
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/mental-health-companion:releaseTest
            docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d
            curl -f http://localhost:3000 || (echo "Healthcheck failed" && exit 1)

      - name: Deploy to Release
        if: github.ref == 'refs/heads/release'
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.RELEASE_HOST }}
          username: ${{ secrets.RELEASE_USERNAME }}
          key: ${{ secrets.RELEASE_SSH_KEY }}
          script: |
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/mental-health-companion:release
            docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d
            curl -f http://localhost:3000 || (echo "Healthcheck failed" && exit 1)

      - name: Deploy to Master
        if: github.ref == 'refs/heads/master'
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.PROD_HOST }}
          username: ${{ secrets.PROD_USERNAME }}
          key: ${{ secrets.PROD_SSH_KEY }}
          script: |
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/mental-health-companion:latest
            docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d
            curl -f http://localhost:3000 || (echo "Healthcheck failed" && exit 1)
